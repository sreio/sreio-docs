import{_ as i,c as a,e,o as n}from"./app-DDsjqNbb.js";const t={};function l(p,s){return n(),a("div",null,s[0]||(s[0]=[e(`<div class="hint-container tip"><p class="hint-container-title">在Go语言中接口（interface）是一种<code>类型</code>，一种抽象的类型。</p></div><h2 id="接口的定义" tabindex="-1"><a class="header-anchor" href="#接口的定义"><span>接口的定义</span></a></h2><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-go"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">type</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> 接口类型名</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> interface</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    方法名1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> 参数列表1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> )</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> 返回值列表1</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    方法名2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> 参数列表2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> )</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> 返回值列表2</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    …</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">接口名：使用type将接口定义为自定义的类型名。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">Go语言的接口在命名时，一般会在单词后面添加er，</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">如有写操作的接口叫Writer，有字符串功能的接口叫Stringer等。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">接口名最好要能突出该接口的类型含义。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">方法名：当方法名首字母是大写且这个接口类型名首字母也是大写时，</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">这个方法可以被接口所在的包（package）之外的代码访问。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">参数列表、返回值列表：参数列表和返回值列表中的参数变量名可以省略。</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)]))}const h=i(t,[["render",l]]),d=JSON.parse('{"path":"/golang/golang_study/%E6%8E%A5%E5%8F%A3/","title":"接口","lang":"zh-CN","frontmatter":{"title":"接口","createTime":"2025/07/04 15:13:35","permalink":"/golang/golang_study/接口/","description":"在Go语言中接口（interface）是一种类型，一种抽象的类型。 接口的定义","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"接口\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-04T07:21:35.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/golang/golang_study/%E6%8E%A5%E5%8F%A3/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"接口"}],["meta",{"property":"og:description","content":"在Go语言中接口（interface）是一种类型，一种抽象的类型。 接口的定义"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-04T07:21:35.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-04T07:21:35.000Z"}]]},"readingTime":{"minutes":0.79,"words":238},"git":{"createdTime":1751613695000,"updatedTime":1751613695000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"0d7a066249c8abc68deea12e75405510469cd820","time":1751613695000,"email":"ingwei@163.com","author":"sreio","message":"go基础"}]},"autoDesc":true,"filePathRelative":"golang/1.入门教程/1.基础/13.接口.md","headers":[]}');export{h as comp,d as data};
