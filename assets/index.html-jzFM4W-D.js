import{_ as t,c as o,e as c,o as i}from"./app-DDsjqNbb.js";const a={};function d(p,e){return i(),o("div",null,e[0]||(e[0]=[c('<p>git version 2.36.0</p><h2 id="文档说明" tabindex="-1"><a class="header-anchor" href="#文档说明"><span>文档说明</span></a></h2><ul><li><code>&lt;&gt;</code> 表示【需替换的项】</li><li><code>[]</code> 表示【非必填项】</li><li><code>|</code> 表示【或】</li><li><strong>工作树</strong>（工作区），<strong>索引</strong>（暂存区），<strong>Git目录</strong>（HEAD） 三词含义参照Git官网</li></ul><h2 id="初始配置" tabindex="-1"><a class="header-anchor" href="#初始配置"><span>初始配置</span></a></h2><p><code>git config --global user.name [&lt;username&gt;]</code> 配置用户名</p><p><code>git config --global user.email [&lt;email&gt;]</code> 配置邮箱</p><p><code>git config --global core.editor [&lt;vim&gt;]</code> 配置编辑器</p><h2 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h2><p><code>git clone &lt;options&gt;</code> 克隆远程仓库</p><p><code>git init [project]</code> 初始化本地项目</p><h2 id="添加" tabindex="-1"><a class="header-anchor" href="#添加"><span>添加</span></a></h2><p><code>git add &lt;file&gt;</code> 添加文件到暂存区</p><p><code>git commit -m &lt;commit notes&gt;</code> 将暂存区的内容提交到HEAD</p><p><code>git commit -am &lt;commit notes&gt;</code> 将add和commit合并操作</p><p><code>git commit --amend -m &lt;commit notes&gt;</code> 将add和commit合并操作且合并到上次commit</p><h2 id="显示" tabindex="-1"><a class="header-anchor" href="#显示"><span>显示</span></a></h2><p><code>git status</code> 显示状态</p><p><code>git diff [HEAD]</code> 显示差异</p><p><code>git log</code> 显示日志</p><p><code>git show &lt;commit&gt;</code> 显示某个commit的详细内容</p><p><code>git blame &lt;file&gt;</code> 显示文件每行的commit信息</p><h2 id="撤回" tabindex="-1"><a class="header-anchor" href="#撤回"><span>撤回</span></a></h2><p><code>git restore &lt;file&gt;</code> 撤回工作区的修改</p><p><code>git restore --staged &lt;file&gt;</code> 将已提交到暂存区的修改撤回工作区</p><p><code>git reset [--mixed] &lt;commit&gt;</code> 将当前版本撤回到某个commit，保留工作区的修改</p><p><code>git reset --soft &lt;commit&gt;</code> 将当前版本撤回到某个commit, 保留工作区和暂存区的修改</p><p><code>git reset --hard &lt;commit&gt;</code> 将当前版本撤回到某一个commit，不保留工作区的修改</p><p><code>git rm &lt;file&gt;</code> 将文件从工作区和暂存区删除</p><p><code>git mv &lt;file&gt;</code> 将文件从工作区和暂存区移动或改名</p><p><code>git clean -df</code> 从工作区删除未跟踪的文件</p><h2 id="分支" tabindex="-1"><a class="header-anchor" href="#分支"><span>分支</span></a></h2><p><code>git branch [--list]</code> 显示所有分支</p><p><code>git branch -a</code> 显示远程分支</p><p><code>git branch &lt;branch&gt;</code> 创建分支</p><p><code>git branch -d|-D &lt;branch&gt;</code> 删除分支</p><p><code>git branch -m &lt;newbranch&gt;</code> 重命名当前分支</p><p><code>git switch &lt;branch&gt;</code> 切换到已有分支</p><p><code>git switch -c &lt;branch&gt;</code> 创建并切换分支</p><p><code>git merge &lt;branch&gt;</code> 将某个分支合并到当前分支</p><p><code>git tag &lt;tagname&gt;</code> 给当前分支打标签</p><p><code>git stash</code> 将工作区的更改存储到脏工作目录中</p><p><code>git stash apply</code> 将脏工作目录中的数据恢复到工作区（不会删除脏工作目录保存的数据）</p><p><code>git stash drop</code> 将脏工作目录中的数据删除</p><p><code>git stash pop</code> 将脏工作目录中的数据恢复工作区并删除脏数据</p><h2 id="远程" tabindex="-1"><a class="header-anchor" href="#远程"><span>远程</span></a></h2><p><code>git remote [-v]</code> 显示远程库</p><p><code>git remote show &lt;origin&gt;</code> 显示某个远程库的信息</p><p><code>git remote add &lt;origin&gt; &lt;url&gt;</code> 添加远程库链接</p><p><code>git remote rm &lt;origin&gt;</code> 删除远程库链接</p><p><code>git remote rename &lt;oldname&gt; &lt;newname&gt;</code> 重命名远程库</p><p><code>git pull [&lt;origin&gt;&lt;branch&gt;]</code> 拉取远程库到本地库</p><p><code>git push [-u &lt;origin&gt; &lt;master&gt;]</code> 将本地库推送到远程库</p><p><code>git push origin --delete &lt;branch&gt;|git push origin :crazy-experiment</code> 删除远程分支</p><p><code>git fetch</code> 从远程库获取到本地库</p><h2 id="帮助" tabindex="-1"><a class="header-anchor" href="#帮助"><span>帮助</span></a></h2><p><code>git help &lt;command&gt;</code> 显示某个命令的详细使用文档</p><p><code>git &lt;command&gt; -h</code> 显示某个命令的使用说明</p><h2 id="checkout" tabindex="-1"><a class="header-anchor" href="#checkout"><span>checkout</span></a></h2><p><code>git checkout &lt;file&gt;</code> 丢弃工作区的修改</p><p><code>git checkout -f</code> 强制丢弃工作区和暂存区的修改</p><p><code>git checkout &lt;branch&gt;</code> 切换分支</p><p><code>git checkout -b &lt;branch&gt;</code> 创建并切换分支</p><p><code>git checkout -p &lt;branch&gt; &lt;file&gt;</code> 将<code>&lt;branch&gt;</code>分支的<code>&lt;file&gt;</code>合并到当前分支下</p><h2 id="rm" tabindex="-1"><a class="header-anchor" href="#rm"><span>rm</span></a></h2><p><code>git rm -r --cache &lt;file/dir&gt;</code> 删除临时文件缓存</p>',65)]))}const g=t(a,[["render",d]]),n=JSON.parse('{"path":"/linux/Git%E5%AE%9E%E8%B7%B5/","title":"Git实践","lang":"zh-CN","frontmatter":{"title":"Git实践","createTime":"2025/07/07 14:52:00","permalink":"/linux/Git实践/","description":"git version 2.36.0 文档说明 <> 表示【需替换的项】 [] 表示【非必填项】 | 表示【或】 工作树（工作区），索引（暂存区），Git目录（HEAD） 三词含义参照Git官网 初始配置 git config --global user.name [<username>] 配置用户名 git config --global user....","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git实践\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T08:09:54.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/linux/Git%E5%AE%9E%E8%B7%B5/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"Git实践"}],["meta",{"property":"og:description","content":"git version 2.36.0 文档说明 <> 表示【需替换的项】 [] 表示【非必填项】 | 表示【或】 工作树（工作区），索引（暂存区），Git目录（HEAD） 三词含义参照Git官网 初始配置 git config --global user.name [<username>] 配置用户名 git config --global user...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T08:09:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T08:09:54.000Z"}]]},"readingTime":{"minutes":2.65,"words":796},"git":{"createdTime":1751871258000,"updatedTime":1751875794000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"309568ac808a0e32f2a30faf8785a5bb75211f52","time":1751875794000,"email":"ingwei@163.com","author":"sreio","message":"docker"},{"hash":"435f29144b32667bf4a1d6b8bd5fd55213c29392","time":1751871258000,"email":"ingwei@163.com","author":"sreio","message":"git"}]},"autoDesc":true,"filePathRelative":"linux/1.git/1.Git实践.md","headers":[]}');export{g as comp,n as data};
