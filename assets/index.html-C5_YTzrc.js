import{_ as r,c as i,b as e,d as o,o as n}from"./app-DDsjqNbb.js";const a={};function c(s,t){return n(),i("div",null,t[0]||(t[0]=[e("p",null,"Docker 镜像是怎么实现增量的修改和维护的？",-1),e("p",null,[o("每个镜像都由很多层次构成，Docker 使用 "),e("a",{href:"https://en.wikipedia.org/wiki/UnionFS",target:"_blank",rel:"noopener noreferrer"},"Union FS"),o(" 将这些不同的层结合到一个镜像中去。")],-1),e("p",null,"通常 Union FS 有两个用途, 一方面可以实现不借助 LVM、RAID 将多个 disk 挂到同一个目录下,另一个更常用的就是将一个只读的分支和一个可写的分支联合在一起，Live CD 正是基于此方法可以允许在镜像不变的基础上允许用户在其上进行一些写操作。",-1),e("p",null,"Docker 在 OverlayFS 上构建的容器也是利用了类似的原理。",-1)]))}const l=r(a,[["render",c]]),m=JSON.parse('{"path":"/linux/%E9%95%9C%E5%83%8F%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/","title":"镜像的实现原理","lang":"zh-CN","frontmatter":{"title":"镜像的实现原理","createTime":"2025/07/07 16:01:12","permalink":"/linux/镜像的实现原理/","description":"Docker 镜像是怎么实现增量的修改和维护的？ 每个镜像都由很多层次构成，Docker 使用 Union FS 将这些不同的层结合到一个镜像中去。 通常 Union FS 有两个用途, 一方面可以实现不借助 LVM、RAID 将多个 disk 挂到同一个目录下,另一个更常用的就是将一个只读的分支和一个可写的分支联合在一起，Live CD 正是基于此方...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"镜像的实现原理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T08:09:54.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/linux/%E9%95%9C%E5%83%8F%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"镜像的实现原理"}],["meta",{"property":"og:description","content":"Docker 镜像是怎么实现增量的修改和维护的？ 每个镜像都由很多层次构成，Docker 使用 Union FS 将这些不同的层结合到一个镜像中去。 通常 Union FS 有两个用途, 一方面可以实现不借助 LVM、RAID 将多个 disk 挂到同一个目录下,另一个更常用的就是将一个只读的分支和一个可写的分支联合在一起，Live CD 正是基于此方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T08:09:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T08:09:54.000Z"}]]},"readingTime":{"minutes":0.67,"words":200},"git":{"createdTime":1751875794000,"updatedTime":1751875794000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"309568ac808a0e32f2a30faf8785a5bb75211f52","time":1751875794000,"email":"ingwei@163.com","author":"sreio","message":"docker"}]},"autoDesc":true,"filePathRelative":"linux/7.Docker-从入门到实践/9.镜像的实现原理.md","headers":[]}');export{l as comp,m as data};
