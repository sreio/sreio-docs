import{_ as s,c as p,b as t,e as a,d as r,a as n,w as i,r as l,o as g}from"./app-DDsjqNbb.js";const d={};function u(m,e){const o=l("VPLink");return g(),p("div",null,[t("p",null,[e[1]||(e[1]=r("镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，")),n(o,{href:"../repository/registry.md"},{default:i(()=>e[0]||(e[0]=[r("Docker Registry")])),_:1,__:[0]}),e[2]||(e[2]=r(" 就是这样的服务。"))]),e[24]||(e[24]=a('<p>一个 <strong>Docker Registry</strong> 中可以包含多个 <strong>仓库</strong>（<code>Repository</code>）；每个仓库可以包含多个 <strong>标签</strong>（<code>Tag</code>）；每个标签对应一个镜像。</p><p>通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 <code>&lt;仓库名&gt;:&lt;标签&gt;</code> 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 <code>latest</code> 作为默认标签。</p><p>以 <a href="https://hub.docker.com/_/ubuntu" target="_blank" rel="noopener noreferrer">Ubuntu 镜像</a> 为例，<code>ubuntu</code> 是仓库的名字，其内包含有不同的版本标签，如，<code>16.04</code>, <code>18.04</code>。我们可以通过 <code>ubuntu:16.04</code>，或者 <code>ubuntu:18.04</code> 来具体指定所需哪个版本的镜像。如果忽略了标签，比如 <code>ubuntu</code>，那将视为 <code>ubuntu:latest</code>。</p><p>仓库名经常以 <em>两段式路径</em> 形式出现，比如 <code>jwilder/nginx-proxy</code>，前者往往意味着 Docker Registry 多用户环境下的用户名，后者则往往是对应的软件名。但这并非绝对，取决于所使用的具体 Docker Registry 的软件或服务。</p><h2 id="docker-registry-公开服务" tabindex="-1"><a class="header-anchor" href="#docker-registry-公开服务"><span>Docker Registry 公开服务</span></a></h2><p>Docker Registry 公开服务是开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。</p><p>最常使用的 Registry 公开服务是官方的 <a href="https://hub.docker.com/" target="_blank" rel="noopener noreferrer">Docker Hub</a>，这也是默认的 Registry，并拥有大量的高质量的 <a href="https://hub.docker.com/search?q=&amp;type=image&amp;image_filter=official" target="_blank" rel="noopener noreferrer">官方镜像</a>。除此以外，还有 Red Hat 的 <a href="https://quay.io/repository/" target="_blank" rel="noopener noreferrer">Quay.io</a>；Google 的 <a href="https://cloud.google.com/container-registry/" target="_blank" rel="noopener noreferrer">Google Container Registry</a>，<a href="https://kubernetes.io/" target="_blank" rel="noopener noreferrer">Kubernetes</a> 的镜像使用的就是这个服务；代码托管平台 <a href="https://github.com" target="_blank" rel="noopener noreferrer">GitHub</a> 推出的 <a href="https://docs.github.com/cn/packages/working-with-a-github-packages-registry/working-with-the-container-registry" target="_blank" rel="noopener noreferrer">ghcr.io</a>。</p>',7)),t("p",null,[e[4]||(e[4]=r("由于某些原因，在国内访问这些服务可能会比较慢。国内的一些云服务商提供了针对 Docker Hub 的镜像服务（")),e[5]||(e[5]=t("code",null,"Registry Mirror",-1)),e[6]||(e[6]=r("），这些镜像服务被称为 ")),e[7]||(e[7]=t("strong",null,"加速器",-1)),e[8]||(e[8]=r("。常见的有 ")),e[9]||(e[9]=t("a",{href:"https://www.aliyun.com/product/acr?source=5176.11533457&userCode=8lx5zmtu",target:"_blank",rel:"noopener noreferrer"},"阿里云加速器",-1)),e[10]||(e[10]=r("、")),e[11]||(e[11]=t("a",{href:"https://www.daocloud.io/mirror#accelerator-doc",target:"_blank",rel:"noopener noreferrer"},"DaoCloud 加速器",-1)),e[12]||(e[12]=r(" 等。使用加速器会直接从国内的地址下载 Docker Hub 的镜像，比直接从 Docker Hub 下载速度会提高很多。在 ")),n(o,{href:"../install/mirror.md"},{default:i(()=>e[3]||(e[3]=[r("安装 Docker")])),_:1,__:[3]}),e[13]||(e[13]=r(" 一节中有详细的配置方法。"))]),e[25]||(e[25]=a('<p>国内也有一些云服务商提供类似于 Docker Hub 的公开服务。比如 <a href="https://c.163.com/hub#/m/library/" target="_blank" rel="noopener noreferrer">网易云镜像服务</a>、<a href="https://hub.daocloud.io/" target="_blank" rel="noopener noreferrer">DaoCloud 镜像市场</a>、<a href="https://www.aliyun.com/product/acr?source=5176.11533457&amp;userCode=8lx5zmtu" target="_blank" rel="noopener noreferrer">阿里云镜像库</a> 等。</p><h2 id="私有-docker-registry" tabindex="-1"><a class="header-anchor" href="#私有-docker-registry"><span>私有 Docker Registry</span></a></h2>',2)),t("p",null,[e[15]||(e[15]=r("除了使用公开服务外，用户还可以在本地搭建私有 Docker Registry。Docker 官方提供了 ")),e[16]||(e[16]=t("a",{href:"https://hub.docker.com/_/registry/",target:"_blank",rel:"noopener noreferrer"},"Docker Registry",-1)),e[17]||(e[17]=r(" 镜像，可以直接使用做为私有 Registry 服务。在 ")),n(o,{href:"../repository/registry.md"},{default:i(()=>e[14]||(e[14]=[r("私有仓库")])),_:1,__:[14]}),e[18]||(e[18]=r(" 一节中，会有进一步的搭建私有 Registry 服务的讲解。"))]),e[26]||(e[26]=t("p",null,[r("开源的 Docker Registry 镜像只提供了 "),t("a",{href:"https://docs.docker.com/registry/spec/api/",target:"_blank",rel:"noopener noreferrer"},"Docker Registry API"),r(" 的服务端实现，足以支持 "),t("code",null,"docker"),r(" 命令，不影响使用。但不包含图形界面，以及镜像维护、用户管理、访问控制等高级功能。")],-1)),t("p",null,[e[20]||(e[20]=r("除了官方的 Docker Registry 外，还有第三方软件实现了 Docker Registry API，甚至提供了用户界面以及一些高级功能。比如，")),e[21]||(e[21]=t("a",{href:"https://github.com/goharbor/harbor",target:"_blank",rel:"noopener noreferrer"},"Harbor",-1)),e[22]||(e[22]=r(" 和 ")),n(o,{href:"../repository/nexus3_registry.md"},{default:i(()=>e[19]||(e[19]=[r("Sonatype Nexus")])),_:1,__:[19]}),e[23]||(e[23]=r("。"))])])}const y=s(d,[["render",u]]),f=JSON.parse('{"path":"/linux/%E4%BB%93%E5%BA%93/","title":"仓库","lang":"zh-CN","frontmatter":{"title":"仓库","createTime":"2025/07/07 15:41:29","permalink":"/linux/仓库/","description":"镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务， 就是这样的服务。 一个 Docker Registry 中可以包含多个 仓库（Repository）；每个仓库可以包含多个 标签（Tag）；每个标签对应一个镜像。 通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"仓库\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T08:09:54.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/linux/%E4%BB%93%E5%BA%93/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"仓库"}],["meta",{"property":"og:description","content":"镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务， 就是这样的服务。 一个 Docker Registry 中可以包含多个 仓库（Repository）；每个仓库可以包含多个 标签（Tag）；每个标签对应一个镜像。 通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T08:09:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T08:09:54.000Z"}]]},"readingTime":{"minutes":3.01,"words":902},"git":{"createdTime":1751875794000,"updatedTime":1751875794000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"309568ac808a0e32f2a30faf8785a5bb75211f52","time":1751875794000,"email":"ingwei@163.com","author":"sreio","message":"docker"}]},"autoDesc":true,"filePathRelative":"linux/7.Docker-从入门到实践/2.基本概念/3.仓库.md","headers":[]}');export{y as comp,f as data};
