import{_ as s,c as e,e as a,o as l}from"./app-DDsjqNbb.js";const n={};function h(t,i){return l(),e("div",null,i[0]||(i[0]=[a(`<div class="hint-container note"><p class="hint-container-title">nc 是一个简单但功能很强大的工具，在 网络调试 中非常有用。</p></div><p>管理员可以用 nc 干很多事情，包括：</p><ul><li>网络测试</li><li>协议交换</li><li>数据传输</li><li>端口扫描</li><li></li></ul><p>除此之外，还有很多很多。</p><h2 id="网络测试" tabindex="-1"><a class="header-anchor" href="#网络测试"><span>网络测试</span></a></h2><p>网络配置变更后，需要测试效果。</p><p>举个例子，用 iptables 配置端口转发后，需要确认转发效果。</p><p>直接部署服务进行测试，不一定是一个好选择。 因为测出问题时，可能无法确定到底是 ①端口转发配置 还是 ②服务本身 有问题。 当然了， 部署服务也需要时间不是？</p><p>因此，需要 尽量避免不必要的影响因素 ，提高针对性。</p><p>在这个场景，最好是通过一个非常简单的网络服务来测试，有针对地验证端口连通性。 那么， nc 就是个不错的工具。</p><p>在<code>目标服务器</code>(下文称为 服务端)上，运行 nc 命令，监听需要验证的端口：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nc</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 12345</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该命令中， <code>-l</code> 选项指定监听模式， 12345 为监听端口号。</p><p>然后，在另一台机器上(下文称为 客户端)，连接该端口：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nc</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 192.168.56.11</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 12345</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果成功连上，则说明端口连通性没问题，端口转发配置是 OK 的。</p><p>这时，客户端可以发送一些数据给服务端，输入要发送的内容并按回车：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nc</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 192.168.56.11</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 12345</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">hello</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> world</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>一点都不意外，服务端收到了信息，并在屏幕上输出：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nc</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 12345</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">hello</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> world</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>服务端也可以发送一些数据给客户端，操作方式是一样的：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nc</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 12345</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">hello</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> world</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">something</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> else</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>客户端接到数据后，也在屏幕上输出：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nc</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 192.168.56.11</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 12345</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">hello</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> world</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">something</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> else</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或许，古时候，人们就是用 nc 命令来聊天的！</p><h2 id="协议交换" tabindex="-1"><a class="header-anchor" href="#协议交换"><span>协议交换</span></a></h2><h2 id="数据传输" tabindex="-1"><a class="header-anchor" href="#数据传输"><span>数据传输</span></a></h2><p>在 网络测试 小节中演示了如何使用 nc 命令在两台服务器间发送数据。 结合 标准输入/输出重定向 ，我们可以用 nc 命令在服务器间传文件！</p><p>在文件接收服务器上，以监听模式运行 nc 命令，并将标准输出重定向到指定位置：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nc</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -l</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 12345</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> test.out</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在文件发送服务器上，运行 nc 命令连接接收端，并将标准输入重定向到要传输的文件：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nc</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 192.168.56.11</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 12345</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &lt;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> test.in</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>文件传完后， nc 命令自动退出。</p><h2 id="端口扫描" tabindex="-1"><a class="header-anchor" href="#端口扫描"><span>端口扫描</span></a></h2><p>知道一台服务器打开了哪些端口对外提供服务非常有用，比如：可以确认是否有内部端口意外对外开放。</p><p>借助 nc 命令，端口扫描非常简单：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> nc</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -z</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 192.168.56.11</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 10-1000</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Connection</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> to</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 192.168.56.11</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> port</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 22</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [tcp/ssh] succeeded</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>该命令对 IP 地址为 <code>192.168.56.11</code> 的服务器进行端口扫描，扫描范围是从 <code>10</code> 到 <code>1000</code> 。 从命令输出可以获悉， <code>22</code> 端口是开启并对外服务的，运行的服务 应该 是 <code>ssh</code> 。</p><p>注意，这里用的词是—— <code>应该</code> 。 虽然端口号有约定俗成的惯例，但并不强制。 确定一个端口的真实服务，需要做一些协议上的交互：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> echo</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">QUIT</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> |</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> nc</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 192.168.56.11</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 22</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">SSH-2.0-OpenSSH_5.3p1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> Debian-3ubuntu7.1</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Protocol</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> mismatch.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该命令连接到服务器 <code>22</code> 端口，并向服务器发送一个字符串<code> QUIT</code> 。 从服务器发来的信息可以完全确定， 22 端口运行的就是 ssh 服务！</p><div class="hint-container warning"><p class="hint-container-title">警告：如果有内部端口被扫出来，必须检查防火墙配置并修复。</p></div>`,42)]))}const k=s(n,[["render",h]]),p=JSON.parse('{"path":"/linux/nc/","title":"nc","lang":"zh-CN","frontmatter":{"title":"nc","createTime":"2025/07/07 15:22:56","permalink":"/linux/nc/","description":"nc 是一个简单但功能很强大的工具，在 网络调试 中非常有用。 管理员可以用 nc 干很多事情，包括： 网络测试 协议交换 数据传输 端口扫描 除此之外，还有很多很多。 网络测试 网络配置变更后，需要测试效果。 举个例子，用 iptables 配置端口转发后，需要确认转发效果。 直接部署服务进行测试，不一定是一个好选择。 因为测出问题时，可能无法确定到...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nc\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T08:09:54.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/linux/nc/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"nc"}],["meta",{"property":"og:description","content":"nc 是一个简单但功能很强大的工具，在 网络调试 中非常有用。 管理员可以用 nc 干很多事情，包括： 网络测试 协议交换 数据传输 端口扫描 除此之外，还有很多很多。 网络测试 网络配置变更后，需要测试效果。 举个例子，用 iptables 配置端口转发后，需要确认转发效果。 直接部署服务进行测试，不一定是一个好选择。 因为测出问题时，可能无法确定到..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T08:09:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T08:09:54.000Z"}]]},"readingTime":{"minutes":3.02,"words":907},"git":{"createdTime":1751873723000,"updatedTime":1751875794000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"309568ac808a0e32f2a30faf8785a5bb75211f52","time":1751875794000,"email":"ingwei@163.com","author":"sreio","message":"docker"},{"hash":"fd3086d2a0dda0e5854876712429ec751f3157ea","time":1751873723000,"email":"ingwei@163.com","author":"sreio","message":"tools"}]},"autoDesc":true,"filePathRelative":"linux/5.常见命令总结/5.nc.md","headers":[]}');export{k as comp,p as data};
