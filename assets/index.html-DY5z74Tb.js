import{_ as t,c as i,e as r,o as a}from"./app-DDsjqNbb.js";const o={};function n(c,e){return a(),i("div",null,e[0]||(e[0]=[r(`<h2 id="isset和empty的区别" tabindex="-1"><a class="header-anchor" href="#isset和empty的区别"><span>isset和empty的区别？</span></a></h2><p><code>Isset</code>测试变量是否<code>被赋值</code>，如果这个变量没被赋值，则返回false，<code>empty</code>是判断变量是否<code>为空</code>，当赋值为0，null,’’,返回true为真。他们之间最大的区别就是当一个变量被赋值0时，empty判断它为空，而isset判断它有值不为空。</p><h2 id="define-与-const-区别" tabindex="-1"><a class="header-anchor" href="#define-与-const-区别"><span>define() 与 const 区别</span></a></h2><ul><li>两者都是定义常量使用</li><li>const 是语言结构, define 是函数</li><li>const 可在类中使用, define 不可以</li><li>const 可以不同命名空间定义相同名称的常量, define 不可以</li><li>const 大小写敏感, define 默认敏感, 可通过第三个参数为 true 设置为不敏感</li></ul><h2 id="include-和-require-的区别是什么" tabindex="-1"><a class="header-anchor" href="#include-和-require-的区别是什么"><span>include 和 require 的区别是什么？</span></a></h2><ul><li>require 是无条件包含, 也就是如果一个流程里加入 require , 无论条件成立与否都会先执行 require , 当文件不存在或者无法打开的时候, 会提示错误, 并且会终止程序执行</li><li>include有返回值, 而require没有 (可能因为如此 require 的速度比 include 快), 如果被包含的文件不存在的话, 那么会提示一个错误, 但是程序会继续执行下去</li></ul><h2 id="单引号与双引号的区别" tabindex="-1"><a class="header-anchor" href="#单引号与双引号的区别"><span>单引号与双引号的区别</span></a></h2><ul><li>单引号不解析变量，双引号解析变量</li><li>单引号只可解析单引号及转义符本身，双引号可解析更多的特殊字符。例: <code>\\n</code>、<code>\\r</code>、<code>\\t</code></li><li>解析速度不同，因单引号不考虑变量解析，所以比双引号要快</li></ul><h2 id="传值与传引用的区别" tabindex="-1"><a class="header-anchor" href="#传值与传引用的区别"><span>传值与传引用的区别</span></a></h2><ul><li>按值传递 ：函数范围内对值的任何改变在函数外部都会被忽略</li><li>按引用传递 ：函数范围内对值的任何改变在函数外部也能反映出这些修改, 因为传引用传的是内存地址。</li><li>优缺点：按值传递时, php 必须复制值。特别是对于大型的字符串和对象来说, 这将会是一个代价很大的操作。按引用传递则不需要复制值, 对于性能提高很有好处。</li></ul><h2 id="与-的区别" tabindex="-1"><a class="header-anchor" href="#与-的区别"><span>== 与 === 的区别</span></a></h2><pre><code>== 要求两侧的值相同，弱类型判断

=== 要求两侧的值与类型都得相同
</code></pre><h2 id="echo、print、print-r、var-dump-的区别" tabindex="-1"><a class="header-anchor" href="#echo、print、print-r、var-dump-的区别"><span>echo、print、print_r、var_dump 的区别</span></a></h2><ul><li>print_r 与 var_dump 是函数, echo、print 是语句</li><li><code>echo</code> 用于输出数值变量或字符串，可以逗号分隔输出多个。数组输出 Array, 对象报错。例: <code>echo $a, $b;</code></li><li><code>print</code> 用于输出数值变量或字符串, 不可输出多个。数组输出 Array, 对象报错。例: <code>print $a;</code></li><li><code>print_r</code> 可简单输出 字符串、数字、数组、对象, 但 布尔(false)、null 都是打印 <code>\\n</code></li><li><code>var_dump</code> 可输出所有字符串、数字、布尔、数组、对象。包括键、值、类型、长度。</li></ul><h2 id="for-与-foreach-的区别-哪个更快-为什么" tabindex="-1"><a class="header-anchor" href="#for-与-foreach-的区别-哪个更快-为什么"><span>for 与 foreach 的区别，哪个更快？为什么？</span></a></h2><ul><li>for 需要预先知道数组的长度, foreach 不需要</li><li>foreach 效果要比 for 高，foreach 直接通过结构体中的 next 指针获取下一个值, 而 for 循环需要根据 key 先进行一次 hash 才得到值。</li></ul>`,16)]))}const l=t(o,[["render",n]]),d=JSON.parse('{"path":"/interview/php/%E5%AF%B9%E6%AF%94%E7%AF%87/","title":"对比篇","lang":"zh-CN","frontmatter":{"title":"对比篇","createTime":"2025/07/07 16:18:18","permalink":"/interview/php/对比篇/","description":"isset和empty的区别？ Isset测试变量是否被赋值，如果这个变量没被赋值，则返回false，empty是判断变量是否为空，当赋值为0，null,’’,返回true为真。他们之间最大的区别就是当一个变量被赋值0时，empty判断它为空，而isset判断它有值不为空。 define() 与 const 区别 两者都是定义常量使用 const 是语...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对比篇\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T08:48:09.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/interview/php/%E5%AF%B9%E6%AF%94%E7%AF%87/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"对比篇"}],["meta",{"property":"og:description","content":"isset和empty的区别？ Isset测试变量是否被赋值，如果这个变量没被赋值，则返回false，empty是判断变量是否为空，当赋值为0，null,’’,返回true为真。他们之间最大的区别就是当一个变量被赋值0时，empty判断它为空，而isset判断它有值不为空。 define() 与 const 区别 两者都是定义常量使用 const 是语..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T08:48:09.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T08:48:09.000Z"}]]},"readingTime":{"minutes":2.6,"words":780},"git":{"createdTime":1751877858000,"updatedTime":1751878089000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":2,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"066c6248983ad7feba746c5bfc01203e48752ed3","time":1751878089000,"email":"ingwei@163.com","author":"sreio","message":"面试"},{"hash":"5be24b01f97e53b886885abde519c2e0cc6b3447","time":1751877858000,"email":"ingwei@163.com","author":"sreio","message":"面试"}]},"autoDesc":true,"filePathRelative":"interview/PHP/3.对比篇.md","headers":[]}');export{l as comp,d as data};
