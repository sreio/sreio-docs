import{_ as i,c as a,e,o as l}from"./app-DDsjqNbb.js";const n={};function h(t,s){return l(),a("div",null,s[0]||(s[0]=[e(`<p>如果要删除本地的镜像，可以使用 <code>docker image rm</code> 命令，其格式为：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [选项] </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">镜像</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">1&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">镜像2</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&gt;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ...</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="用-id、镜像名、摘要删除镜像" tabindex="-1"><a class="header-anchor" href="#用-id、镜像名、摘要删除镜像"><span>用 ID、镜像名、摘要删除镜像</span></a></h2><p>其中，<code>&lt;镜像&gt;</code> 可以是 <code>镜像短 ID</code>、<code>镜像长 ID</code>、<code>镜像名</code> 或者 <code>镜像摘要</code>。</p><p>比如我们有这么一些镜像：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ls</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">REPOSITORY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                  TAG</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                 IMAGE</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ID</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            CREATED</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">             SIZE</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">centos</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                      latest</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">              0584b3d2cf6d</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">        3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> weeks</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ago</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">         196.5</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MB</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">redis</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                       alpine</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">              501ad78535f0</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">        3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> weeks</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ago</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">         21.03</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MB</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                      latest</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">              cf693ec9b5c7</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">        3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> weeks</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ago</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">         105.1</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MB</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">nginx</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                       latest</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">              e43d811ce2f4</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">        5</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> weeks</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ago</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">         181.5</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MB</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以用镜像的完整 ID，也称为 <code>长 ID</code>，来删除镜像。使用脚本的时候可能会用长 ID，但是人工输入就太累了，所以更多的时候是用 <code>短 ID</code> 来删除镜像。<code>docker image ls</code> 默认列出的就已经是短 ID 了，一般取前3个字符以上，只要足够区分于别的镜像就可以了。</p><p>比如这里，如果我们要删除 <code>redis:alpine</code> 镜像，可以执行：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 501</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Untagged:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> redis:alpine</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Untagged:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> redis@sha256:f1ed3708f538b537eb9c2a7dd50dc90a706f7debd7e1196c9264edeea521a86d</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Deleted:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sha256:501ad78535f015d88872e13fa87a828425117e3d28075d0c117932b05bf189b7</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Deleted:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sha256:96167737e29ca8e9d74982ef2a0dda76ed7b430da55e321c071f0dbff8c2899b</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Deleted:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sha256:32770d1dcf835f192cafd6b9263b7b597a1778a403a109e2cc2ee866f74adf23</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Deleted:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sha256:127227698ad74a5846ff5153475e03439d96d4b1c7f2a449c7a826ef74a2d2fa</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Deleted:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sha256:1333ecc582459bac54e1437335c0816bc17634e131ea0cc48daa27d32c75eab3</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Deleted:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sha256:4fc455b921edf9c4aea207c51ab39b10b06540c8b4825ba57b3feed1668fa7c7</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们也可以用<code>镜像名</code>，也就是 <code>&lt;仓库名&gt;:&lt;标签&gt;</code>，来删除镜像。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> centos</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Untagged:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> centos:latest</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Untagged:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> centos@sha256:b2f9d1c0ff5f87a4743104d099a3d561002ac500db1b9bfa02a783a46e0d366c</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Deleted:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sha256:0584b3d2cf6d235ee310cf14b54667d889887b838d3f3d3033acd70fc3c48b8a</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Deleted:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> sha256:97ca462ad9eeae25941546209454496e1d66749d53dfa2ee32bf1faabd239d38</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然，更精确的是使用 <code>镜像摘要</code> 删除镜像。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ls</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> --digests</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">REPOSITORY</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                  TAG</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                 DIGEST</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                                                                    IMAGE</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ID</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">            CREATED</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">             SIZE</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">node</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                        slim</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">                sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">   6e0c4c8e3913</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">        3</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> weeks</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ago</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">         214</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> MB</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Untagged:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="untagged-和-deleted" tabindex="-1"><a class="header-anchor" href="#untagged-和-deleted"><span>Untagged 和 Deleted</span></a></h2><p>如果观察上面这几个命令的运行输出信息的话，你会注意到删除行为分为两类，一类是 <code>Untagged</code>，另一类是 <code>Deleted</code>。我们之前介绍过，镜像的唯一标识是其 ID 和摘要，而一个镜像可以有多个标签。</p><p>因此当我们使用上面命令删除镜像的时候，实际上是在要求删除某个标签的镜像。所以首先需要做的是将满足我们要求的所有镜像标签都取消，这就是我们看到的 <code>Untagged</code> 的信息。因为一个镜像可以对应多个标签，因此当我们删除了所指定的标签后，可能还有别的标签指向了这个镜像，如果是这种情况，那么 <code>Delete</code> 行为就不会发生。所以并非所有的 <code>docker image rm</code> 都会产生删除镜像的行为，有可能仅仅是取消了某个标签而已。</p><p>当该镜像所有的标签都被取消了，该镜像很可能会失去了存在的意义，因此会触发删除行为。镜像是多层存储结构，因此在删除的时候也是从上层向基础层方向依次进行判断删除。镜像的多层结构让镜像复用变得非常容易，因此很有可能某个其它镜像正依赖于当前镜像的某一层。这种情况，依旧不会触发删除该层的行为。直到没有任何层依赖当前层时，才会真实的删除当前层。这就是为什么，有时候会奇怪，为什么明明没有别的标签指向这个镜像，但是它还是存在的原因，也是为什么有时候会发现所删除的层数和自己 <code>docker pull</code> 看到的层数不一样的原因。</p><p>除了镜像依赖以外，还需要注意的是容器对镜像的依赖。如果有用这个镜像启动的容器存在（即使容器没有运行），那么同样不可以删除这个镜像。之前讲过，容器是以镜像为基础，再加一层容器存储层，组成这样的多层存储结构去运行的。因此该镜像如果被这个容器所依赖的，那么删除必然会导致故障。如果这些容器是不需要的，应该先将它们删除，然后再来删除镜像。</p><h2 id="用-docker-image-ls-命令来配合" tabindex="-1"><a class="header-anchor" href="#用-docker-image-ls-命令来配合"><span>用 docker image ls 命令来配合</span></a></h2><p>像其它可以承接多个实体的命令一样，可以使用 <code>docker image ls -q</code> 来配合使用 <code>docker image rm</code>，这样可以成批的删除希望删除的镜像。我们在“镜像列表”章节介绍过很多过滤镜像列表的方式都可以拿过来使用。</p><p>比如，我们需要删除所有仓库名为 <code>redis</code> 的镜像：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> $(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ls</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -q</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> redis</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或者删除所有在 <code>mongo:3.2</code> 之前的镜像：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">$</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> rm</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> $(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">docker</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> image</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ls</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -q</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -f</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> before=mongo:3.2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>充分利用你的想象力和 Linux 命令行的强大，你可以完成很多非常赞的功能。</p>`,25)]))}const d=i(n,[["render",h]]),p=JSON.parse('{"path":"/linux/%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E9%95%9C%E5%83%8F/","title":"删除本地镜像","lang":"zh-CN","frontmatter":{"title":"删除本地镜像","createTime":"2025/07/07 15:48:49","permalink":"/linux/删除本地镜像/","description":"如果要删除本地的镜像，可以使用 docker image rm 命令，其格式为： 用 ID、镜像名、摘要删除镜像 其中，<镜像> 可以是 镜像短 ID、镜像长 ID、镜像名 或者 镜像摘要。 比如我们有这么一些镜像： 我们可以用镜像的完整 ID，也称为 长 ID，来删除镜像。使用脚本的时候可能会用长 ID，但是人工输入就太累了，所以更多的时候是用 短 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"删除本地镜像\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T08:09:54.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/linux/%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E9%95%9C%E5%83%8F/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"删除本地镜像"}],["meta",{"property":"og:description","content":"如果要删除本地的镜像，可以使用 docker image rm 命令，其格式为： 用 ID、镜像名、摘要删除镜像 其中，<镜像> 可以是 镜像短 ID、镜像长 ID、镜像名 或者 镜像摘要。 比如我们有这么一些镜像： 我们可以用镜像的完整 ID，也称为 长 ID，来删除镜像。使用脚本的时候可能会用长 ID，但是人工输入就太累了，所以更多的时候是用 短 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T08:09:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T08:09:54.000Z"}]]},"readingTime":{"minutes":3.93,"words":1180},"git":{"createdTime":1751875794000,"updatedTime":1751875794000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"309568ac808a0e32f2a30faf8785a5bb75211f52","time":1751875794000,"email":"ingwei@163.com","author":"sreio","message":"docker"}]},"autoDesc":true,"filePathRelative":"linux/7.Docker-从入门到实践/4.使用镜像/3.删除本地镜像.md","headers":[]}');export{d as comp,p as data};
