import{_ as s,c as e,e as a,o as l}from"./app-DDsjqNbb.js";const t={};function n(r,i){return l(),e("div",null,i[0]||(i[0]=[a(`<h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><blockquote><p>explain + SQL 语句（select 语句）</p><p>desc + SQL 语句（select 语句）</p><blockquote></blockquote></blockquote><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">## 例如： explain </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> t3 </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">where</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> id</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">=</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">----+-------------+-------+-------+-------------------+---------+---------+-------+------+-------+</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">| id | select_type | </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">table</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">type</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">  | possible_keys     | </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">key</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">     | key_len | ref   | </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">rows</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> | Extra |</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">+</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">----+-------------+-------+-------+-------------------+---------+---------+-------+------+-------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explain执行计划中包含的信息如下" tabindex="-1"><a class="header-anchor" href="#explain执行计划中包含的信息如下"><span>explain执行计划中包含的信息如下：</span></a></h3><ul><li>id: 查询序列号</li><li>select_type: 查询类型</li><li>table: 表名或者别名</li><li>partitions: 匹配的分区</li><li>type: 访问类型</li><li>possible_keys: 可能用到的索引</li><li>key: 实际用到的索引</li><li>key_len: 索引长度</li><li>ref: 与索引比较的列</li><li>rows: 估算的行数</li><li>filtered: 按表条件筛选的行百分比</li><li>Extra: 额外信息</li></ul><h3 id="select-type-常见类型及其含义" tabindex="-1"><a class="header-anchor" href="#select-type-常见类型及其含义"><span><code>select_type</code> 常见类型及其含义</span></a></h3><ul><li>SIMPLE：不包含子查询或者 UNION 操作的查询</li><li>PRIMARY：查询中如果包含任何子查询，那么最外层的查询则被标记为 PRIMARY</li><li>SUBQUERY：子查询中第一个 SELECT</li><li>DEPENDENT SUBQUERY：子查询中的第一个 SELECT，取决于外部查询</li><li>UNION：UNION 操作的第二个或者之后的查询</li><li>DEPENDENT UNION：UNION 操作的第二个或者之后的查询,取决于外部查询</li><li>UNION RESULT：UNION 产生的结果集</li><li>DERIVED：出现在 FROM 字句中的子查询</li></ul><h3 id="type常见类型及其含义" tabindex="-1"><a class="header-anchor" href="#type常见类型及其含义"><span><code>type</code>常见类型及其含义</span></a></h3><ul><li>system：这是 const 类型的一个特例，只会出现在待查询的表只有一行数据的情况下</li><li>consts：常出现在主键或唯一索引与常量值进行比较的场景下，此时查询性能是最优的</li><li>eq_ref：当连接使用的是完整的索引并且是 PRIMARY KEY 或 UNIQUE NOT NULL INDEX 时使用它</li><li>ref：当连接使用的是前缀索引或连接条件不是 PRIMARY KEY 或 UNIQUE INDEX 时则使用它</li><li>ref_or_null：类似于 ref 类型的查询，但是附加了对 NULL 值列的查询</li><li>index_merge：该联接类型表示使用了索引进行合并优化</li><li>range：使用索引进行范围扫描，常见于 between、&gt; 、&lt; 这样的查询条件</li><li>index：索引连接类型与 ALL 相同，只是扫描的是索引树，通常出现在索引是该查询的覆盖索引的情况</li><li>ALL：全表扫描，效率最差的查找方式</li></ul><div class="hint-container tip"><p class="hint-container-title">从下到上，性能从差到好</p></div><h3 id="extra列" tabindex="-1"><a class="header-anchor" href="#extra列"><span>Extra列</span></a></h3><p>该列包含MySQL解决查询的详细信息,有以下几种情况：</p><ul><li><p>Using where:不用读取表中所有信息，仅通过索引就可以获取所需数据，这发生在对表的全部的请求列都是同一个索引的部分的时候，表示mysql服务器将在存储引擎检索行后再进行过滤</p></li><li><p>Using temporary：表示MySQL需要使用临时表来存储结果集，常见于排序和分组查询，常见 group by ; order by</p></li><li><p>Using filesort：当Query中包含 order by 操作，而且无法利用索引完成的排序操作称为“文件排序”</p></li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- 测试Extra的filesort</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">explain </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> emp </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">order by</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> name</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>Using join buffer：改值强调了在获取连接条件时没有使用索引，并且需要连接缓冲区来存储中间结果。如果出现了这个值，那应该注意，根据查询的具体情况可能需要添加索引来改进能。</p></li><li><p>Impossible where：这个值强调了where语句会导致没有符合条件的行（通过收集统计信息不可能存在结果）。</p></li><li><p>Select tables optimized away：这个值意味着仅通过使用索引，优化器可能仅从聚合函数结果中返回一行</p></li><li><p>No tables used：Query语句中使用from dual 或不含任何from子句</p></li></ul><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">-- explain select now() from dual;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><p>当一条sql语句提交给mysql数据库进行查询的时候需要经历以下几步</p><ol><li>先在where解析这一步把当前的查询语句中的查询条件分解成每一个独立的条件单元</li><li>mysql会自动将sql拆分重组</li><li>然后where条件会在B-tree index这部分进行索引匹配，如果命中索引，就会定位到指定的table records位置。如果没有命中，则只能采用全部扫描的方式</li><li>根据当前查询字段返回对应的数据值</li></ol><hr><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结：</span></a></h2><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-txt"><span class="line"><span>    EXPLAIN不会告诉你关于触发器、存储过程的信息或用户自定义函数对查询的影响情况</span></span>
<span class="line"><span>    EXPLAIN不考虑各种Cache</span></span>
<span class="line"><span>    EXPLAIN不能显示MySQL在执行查询时所作的优化工作</span></span>
<span class="line"><span>    部分统计信息是估算的，并非精确值</span></span>
<span class="line"><span>    EXPALIN只能解释SELECT操作，其他操作要重写为SELECT后查看执行计划。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mysql索引失效的常见9种原因详解" tabindex="-1"><a class="header-anchor" href="#mysql索引失效的常见9种原因详解"><span><a href="https://blog.csdn.net/m0_67391870/article/details/126037317" target="_blank" rel="noopener noreferrer">mysql索引失效的常见9种原因详解</a></span></a></h2>`,23)]))}const h=s(t,[["render",n]]),d=JSON.parse('{"path":"/mysql/%E5%AE%9E%E8%B7%B5%E6%8A%80%E5%B7%A7/explain_desc/","title":"explain/desc","lang":"zh-CN","frontmatter":{"title":"explain/desc","createTime":"2025/07/07 17:51:31","permalink":"/mysql/实践技巧/explain_desc/","description":"语法 explain + SQL 语句（select 语句） desc + SQL 语句（select 语句） explain执行计划中包含的信息如下： id: 查询序列号 select_type: 查询类型 table: 表名或者别名 partitions: 匹配的分区 type: 访问类型 possible_keys: 可能用到的索引 key: 实...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"explain/desc\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T10:46:08.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/mysql/%E5%AE%9E%E8%B7%B5%E6%8A%80%E5%B7%A7/explain_desc/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"explain/desc"}],["meta",{"property":"og:description","content":"语法 explain + SQL 语句（select 语句） desc + SQL 语句（select 语句） explain执行计划中包含的信息如下： id: 查询序列号 select_type: 查询类型 table: 表名或者别名 partitions: 匹配的分区 type: 访问类型 possible_keys: 可能用到的索引 key: 实..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T10:46:08.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T10:46:08.000Z"}]]},"readingTime":{"minutes":3.83,"words":1148},"git":{"createdTime":1751885168000,"updatedTime":1751885168000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"c1ab990bb57919c348cc77b4236368714def9959","time":1751885168000,"email":"ingwei@163.com","author":"sreio","message":"elk&#x26;clickhouse&#x26;redis&#x26;mongdb&#x26;etcd"}]},"autoDesc":true,"filePathRelative":"mysql/3.实践技巧/2.explain_desc.md","headers":[]}');export{h as comp,d as data};
