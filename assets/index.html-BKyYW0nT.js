import{_ as s,c as e,e as t,o as a}from"./app-DDsjqNbb.js";const l={};function h(d,i){return a(),e("div",null,i[0]||(i[0]=[t('<h2 id="常用sql" tabindex="-1"><a class="header-anchor" href="#常用sql"><span>常用SQL</span></a></h2><ul><li><p>查看 IP 登陆次数，按客户端 IP 分组</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> client_ip,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">count</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(client_ip) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> client_num </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> (</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> substring_index(host,</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> client_ip </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> information_schema</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">processlist</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> ) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">as</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> connect_info </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">group by</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> client_ip </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">order by</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> client_num </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">desc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>查看正在执行的线程，并按 Time 倒序排序， 看是否有执行时间过长的 SQL</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> information_schema</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">processlist</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> where</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Command </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Sleep</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> order by</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> Time</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> desc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>查找执行时间超过 <code>5分钟</code> 的线程，并拼接 Kill 语句(Time是以秒为单位，所以300是5分钟)</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> concat</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">kill </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">, id, </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">;</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">) </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">from</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> information_schema</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">processlist</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> where</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> Command </span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">!=</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Sleep</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> and</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> Time</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> &gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 300</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> order by</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> Time</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> desc</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><h2 id="processlist" tabindex="-1"><a class="header-anchor" href="#processlist"><span>processlist</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">show full processlist;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行结果</p><table><thead><tr><th style="text-align:center;">ID</th><th>User</th><th>Host</th><th>db</th><th>Command</th><th>Time</th><th>State</th><th>Info</th></tr></thead><tbody><tr><td style="text-align:center;">4540</td><td>root</td><td>172.18.0.1:63388</td><td>adp</td><td>Query</td><td>0</td><td>init</td><td>show full processlist</td></tr><tr><td style="text-align:center;">4541</td><td>Root</td><td>172.18.0.1:63390</td><td>NULL</td><td>Sleep</td><td>52</td><td>NULL</td><td></td></tr></tbody></table><blockquote><p><code>show processlist</code> 是显示用户正在运行的线程，需要注意的是，除了<code> root</code> 用户能看到所有正在运行的线程外，其他用户都只能看到自己正在运行的线程，看不到其它用户正在运行的线程。除非单独个这个用户赋予了<code>PROCESS</code> 权限。</p></blockquote><p><code>show processlist</code> 显示的信息都是来自<code>MySQL</code>系统库 <code>information_schema</code> 中的 <code>processlist</code> 表。所以使用下面的查询语句可以获得相同的结果：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-sql"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">select</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> *</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> information_schema</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">processlist</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>字段详解：</p><ul><li><p><code>Id</code>: 就是这个线程的唯一标识，当我们发现这个线程有问题的时候，可以通过 kill 命令，加上这个Id值将这个线程杀掉。前面我们说了show processlist 显示的信息时来自information_schema.processlist 表，所以这个Id就是这个表的主键。</p></li><li><p><code>User</code>: 就是指启动这个线程的用户。</p></li><li><p><code>Host</code>: 记录了发送请求的客户端的 IP 和 端口号。通过这些信息在排查问题的时候，我们可以定位到是哪个客户端的哪个进程发送的请求。</p></li><li><p><code>DB</code>: 当前执行的命令是在哪一个数据库上。如果没有指定数据库，则该值为 NULL 。</p></li><li><p><code>Command</code>: 是指此刻该线程正在执行的命令。这个很复杂，下面单独解释</p></li><li><p><code>Time</code>: 表示该线程处于当前状态的时间。</p></li><li><p><code>State</code>: 线程的状态，和 Command 对应，下面单独解释。</p></li><li><p><code>Info</code>: 一般记录的是线程执行的语句。默认只显示前100个字符，也就是你看到的语句可能是截断了的，要看全部信息，需要使用 show full processlist。</p></li></ul><p>下面我们单独看一下 Command 的值：</p><ul><li><code>Binlog Dump</code>: 主节点正在将二进制日志 ，同步到从节点</li></ul><ul><li><p><code>Change User</code>: 正在执行一个 change-user 的操作</p></li><li><p><code>Close Stmt</code>: 正在关闭一个Prepared Statement 对象</p></li><li><p><code>Connect</code>: 一个从节点连上了主节点</p></li><li><p><code>Connect Out</code>: 一个从节点正在连主节点</p></li><li><p><code>Create DB</code>: 正在执行一个create-database 的操作</p></li><li><p><code>Daemon</code>: 服务器内部线程，而不是来自客户端的链接</p></li><li><p><code>Debug</code>: 线程正在生成调试信息</p></li><li><p><code>Delayed Insert</code>: 该线程是一个延迟插入的处理程序</p></li><li><p><code>Drop DB</code>: 正在执行一个 drop-database 的操作</p></li><li><p><code>Execute</code>: 正在执行一个 Prepared Statement</p></li><li><p><code>Fetch</code>: 正在从Prepared Statement 中获取执行结果</p></li><li><p><code>Field List</code>: 正在获取表的列信息</p></li><li><p><code>Init DB</code>: 该线程正在选取一个默认的数据库</p></li><li><p><code>Kill</code> : 正在执行 kill 语句，杀死指定线程</p></li><li><p><code>Long Data</code>: 正在从Prepared Statement 中检索 long data</p></li><li><p><code>Ping</code>: 正在处理 server-ping 的请求</p></li><li><p><code>Prepare</code>: 该线程正在准备一个 Prepared Statement</p></li><li><p><code>ProcessList</code>: 该线程正在生成服务器线程相关信息</p></li><li><p><code>Query</code>: 该线程正在执行一个语句</p></li><li><p><code>Quit</code>: 该线程正在退出</p></li><li><p><code>Refresh</code>：该线程正在刷表，日志或缓存；或者在重置状态变量，或者在复制服务器信息</p></li><li><p><code>Register Slave</code>： 正在注册从节点</p></li><li><p><code>Reset Stmt</code>: 正在重置 prepared statement</p></li><li><p><code>Set Option</code>: 正在设置或重置客户端的 statement-execution 选项</p></li><li><p><code>Shutdown</code>: 正在关闭服务器</p></li><li><p><code>Sleep</code>: 正在等待客户端向它发送执行语句</p></li><li><p><code>Statistics</code>: 该线程正在生成 server-status 信息</p></li><li><p><code>Table Dump</code>: 正在发送表的内容到从服务器</p></li><li><p><code>Time</code>: Unused</p></li></ul>',14)]))}const n=s(l,[["render",h]]),r=JSON.parse('{"path":"/mysql/%E5%AE%9E%E8%B7%B5%E6%8A%80%E5%B7%A7/show_full_processlist/","title":"show full processlist","lang":"zh-CN","frontmatter":{"title":"show full processlist","createTime":"2025/07/07 17:50:08","permalink":"/mysql/实践技巧/show_full_processlist/","description":"常用SQL 查看 IP 登陆次数，按客户端 IP 分组 查看正在执行的线程，并按 Time 倒序排序， 看是否有执行时间过长的 SQL 查找执行时间超过 5分钟 的线程，并拼接 Kill 语句(Time是以秒为单位，所以300是5分钟) processlist 执行结果 show processlist 是显示用户正在运行的线程，需要注意的是，除了 r...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"show full processlist\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T10:46:08.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/mysql/%E5%AE%9E%E8%B7%B5%E6%8A%80%E5%B7%A7/show_full_processlist/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"show full processlist"}],["meta",{"property":"og:description","content":"常用SQL 查看 IP 登陆次数，按客户端 IP 分组 查看正在执行的线程，并按 Time 倒序排序， 看是否有执行时间过长的 SQL 查找执行时间超过 5分钟 的线程，并拼接 Kill 语句(Time是以秒为单位，所以300是5分钟) processlist 执行结果 show processlist 是显示用户正在运行的线程，需要注意的是，除了 r..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T10:46:08.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T10:46:08.000Z"}]]},"readingTime":{"minutes":3.37,"words":1012},"git":{"createdTime":1751885168000,"updatedTime":1751885168000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"c1ab990bb57919c348cc77b4236368714def9959","time":1751885168000,"email":"ingwei@163.com","author":"sreio","message":"elk&#x26;clickhouse&#x26;redis&#x26;mongdb&#x26;etcd"}]},"autoDesc":true,"filePathRelative":"mysql/3.实践技巧/1.processlist.md","headers":[]}');export{n as comp,r as data};
