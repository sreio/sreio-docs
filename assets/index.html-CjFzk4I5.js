import{_ as s,c as a,e as n,o as l}from"./app-DDsjqNbb.js";const e={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[n(`<p>本章介绍MongoDB查询性能分析，类似SQL的explain，MongoDB也支持explain分析查询语句的性能。</p><h2 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法"><span>基本用法</span></a></h2><p>调用explain函数，可以获取分析结果</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> find方法分析结构</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    db.collection.find(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">.explain</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> aggregate方法的分析结果</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    db.collection.explain</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">.aggregate(</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>explain有三种模式：</p><ul><li>queryPlanner (默认)</li><li>executionStats</li><li>allPlansExecution</li></ul></li><li><p>说明:</p><ul><li>使用queryPlanner只列出所有可能执行的方案，不会执行实际的语句，显示已经胜出的方案winningPlan。</li><li>使用executionStats只执行winningPlan方案，并输出结果。</li><li>使用allPlansExecution执行所有的方案，并输出结果。</li></ul></li></ul><p>不用模式的用法</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> executionStats</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 模式,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 给explain函数传递参数即可</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    db.collection.find(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">).explain(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&#39;executionStats&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> allPlansExecution</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 模式</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    db.collection.find(</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">{}</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">).explain(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">&#39;allPlansExecution&#39;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="explain内容解读" tabindex="-1"><a class="header-anchor" href="#explain内容解读"><span>explain内容解读</span></a></h2><h3 id="queryplanner内容" tabindex="-1"><a class="header-anchor" href="#queryplanner内容"><span>queryPlanner内容</span></a></h3><p>下面内容是explain默认返回内容，忽略了非关键信息</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    &quot;queryPlanner&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;plannerVersion&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 1,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;namespace&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">test.orders</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;indexFilterSet&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> false</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 关键指标，有没有使用索引过滤数据</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;winningPlan&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;stage&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">COLLSCAN</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 关键指标，stage阶段名称。每个阶段都有每个阶段特有的信息，例如：COLLSCAN代表扫描整个集合内容</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;direction&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">forward</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;rejectedPlans&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [ </span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">]</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">    ...</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>stage阶段类型如下：</p><ul><li><code>COLLSCAN：</code>全表扫描</li><li><code>IXSCAN：</code>索引扫描</li><li><code>FETCH：</code>根据索引去检索指定document</li><li><code>SHARD_MERGE：</code>将各个分片返回数据进行merge</li><li><code>SORT：</code>表明在内存中进行了排序</li><li><code>LIMIT：</code>使用limit限制返回数</li><li><code>SKIP：</code>使用skip进行跳过</li><li><code>IDHACK：</code>针对_id进行查询</li><li><code>SHARDING_FILTER：</code>通过mongos对分片数据进行查询</li><li><code>COUNT：</code>利用db.coll.explain().count()之类进行count运算</li><li><code>COUNTSCAN：</code> count不使用Index进行count时的stage返回</li><li><code>COUNT_SCAN：</code> count使用了Index进行count时的stage返回</li><li><code>SUBPLA：</code>未使用到索引的$or查询的stage返回</li><li><code>EXT：</code>使用全文索引进行查询时候的stage返回</li><li><code>PROJECTION：</code>限定返回字段时候stage的返回</li></ul></li></ul><h3 id="executionstats内容" tabindex="-1"><a class="header-anchor" href="#executionstats内容"><span>executionStats内容</span></a></h3><p>下面内容是executionStats模式返回内容，忽略了非关键信息</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">    &quot;executionStats&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;executionSuccess&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;nReturned&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 5,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">  //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 返回文档数</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;executionTimeMillis&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 执行时间</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;totalKeysExamined&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 扫描多少个索引</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;totalDocsExamined&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 5,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 总扫描文档数</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">        &quot;executionStages&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> {</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;stage&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">COLLSCAN</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> //</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 阶段类型，</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> COLLSCAN全表扫描的意思</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;nReturned&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 5,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;executionTimeMillisEstimate&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;works&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 7,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;advanced&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 5,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;needTime&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 1,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;needYield&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;saveState&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;restoreState&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 0,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;isEOF&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> 1,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;direction&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">forward</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">            &quot;docsExamined&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> :</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">    }</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查询优化思路" tabindex="-1"><a class="header-anchor" href="#查询优化思路"><span>查询优化思路</span></a></h2><ul><li>尽量使用索引</li><li>扫描文档数越小越好</li></ul>`,17)]))}const p=s(e,[["render",t]]),d=JSON.parse('{"path":"/mongodb/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/","title":"性能分析","lang":"zh-CN","frontmatter":{"title":"性能分析","createTime":"2025/07/07 18:31:20","permalink":"/mongodb/性能分析/","description":"本章介绍MongoDB查询性能分析，类似SQL的explain，MongoDB也支持explain分析查询语句的性能。 基本用法 调用explain函数，可以获取分析结果 explain有三种模式： queryPlanner (默认) executionStats allPlansExecution 说明: 使用queryPlanner只列出所有可能执...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"性能分析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T10:46:08.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/mongodb/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"性能分析"}],["meta",{"property":"og:description","content":"本章介绍MongoDB查询性能分析，类似SQL的explain，MongoDB也支持explain分析查询语句的性能。 基本用法 调用explain函数，可以获取分析结果 explain有三种模式： queryPlanner (默认) executionStats allPlansExecution 说明: 使用queryPlanner只列出所有可能执..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T10:46:08.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T10:46:08.000Z"}]]},"readingTime":{"minutes":1.96,"words":587},"git":{"createdTime":1751885168000,"updatedTime":1751885168000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"c1ab990bb57919c348cc77b4236368714def9959","time":1751885168000,"email":"ingwei@163.com","author":"sreio","message":"elk&#x26;clickhouse&#x26;redis&#x26;mongdb&#x26;etcd"}]},"autoDesc":true,"filePathRelative":"mongodb/7.高级专题/2.performance.md","headers":[]}');export{p as comp,d as data};
