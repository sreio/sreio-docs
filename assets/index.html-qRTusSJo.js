import{_ as i,c as a,e as n,o as l}from"./app-DDsjqNbb.js";const e={};function p(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<p>入口文件index.php的源码：</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-php"><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">&lt;?</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * Laravel - A PHP Framework For Web Artisans</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> *</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">@package</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  Laravel</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> * </span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">@author</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">   Taylor Otwell &lt;taylor@laravel.com&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">define</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">LARAVEL_START</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> microtime</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/*</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| Register The Auto Loader</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| Composer provides a convenient, automatically generated class loader for</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| our application. We just need to utilize it! We&#39;ll simply require it</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| into the script here so that we don&#39;t have to worry about manual</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| loading any of our classes later on. It feels great to relax.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">require</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> __DIR__</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">.</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/../vendor/autoload.php</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 第一阶段</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/*</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| Turn On The Lights</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| We need to illuminate PHP development, so let us turn on the lights.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| This bootstraps the framework and gets it ready for use, then it</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| will load up this application so that we can run it and send</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| the responses back to the browser and delight our users.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> require_once</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> __DIR__</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">.</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">/../bootstrap/app.php</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 第二阶段</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">/*</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| Run The Application</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| Once we have the application, we can handle the incoming request</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| through the kernel, and send the associated response back to</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| the client&#39;s browser allowing them to enjoy the creative</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">| and wonderful application we have prepared for them.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">|</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">kernel</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> $</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">make</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Illuminate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">\\</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Contracts</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">\\</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Http</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">\\</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Kernel</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">::</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">class</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 第三阶段</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> </span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">response</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> $</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">kernel</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">handle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 第四阶段</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    $</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">request</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;"> Illuminate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">\\</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Http</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">\\</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Request</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">::</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">capture</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">response</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">send</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;"> // 第五阶段</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">$</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">kernel</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">-&gt;</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">terminate</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">($</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">request</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> $</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">response</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 第六阶段</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>public/index.php</p></blockquote><p>按照上面代码中的注释，我们简要说明一下6个阶段，每个阶段大致都做了什么：</p><p>1、实现项目第三方库文件的自动加载</p><p>2、引入框架app启动文件</p><p>这个阶段框架做了大量的准备工作，包括：</p><ul><li>2.1、实例化容器类 <ul><li>2.1.1 设置基础目录路径</li><li>2.1.2 注册基础绑定</li><li>2.1.3 注册服务提供者</li><li>2.1.4 注册核心别名类</li></ul></li><li>2.2、向容器中&quot;装填&quot;处理HTTP请求的核心类HttpKernel</li><li>2.3、向容器中&quot;装填&quot;处理命令行的核心类ConsoleKernel</li><li>2.4、向容器中&quot;装填&quot;处理异常的核心类</li></ul><p>3、从app中得到容器中装填好的处理HTTP请求的类赋值给变量kernel</p><p>4、运行HttpKernel类的handle方法，处理接收到的HTTP请求，得到需要返回的对象</p><p>5、运行返回对象的send方法渲染页面</p><p>6、继续运行HttpKernel类的terminate方法，执行绑定在容器中可能要执行的其他动作</p><p>从下一章开始，我们将按照上面的次序从上到下为大家详细阐述每个阶段框架所做的工作。</p>`,13)]))}const k=i(e,[["render",p]]),r=JSON.parse('{"path":"/php/iqcd90yh/","title":"第二章：核心代码结构分析","lang":"zh-CN","frontmatter":{"title":"第二章：核心代码结构分析","createTime":"2025/07/08 10:34:23","permalink":"/php/iqcd90yh/","description":"入口文件index.php的源码： public/index.php 按照上面代码中的注释，我们简要说明一下6个阶段，每个阶段大致都做了什么： 1、实现项目第三方库文件的自动加载 2、引入框架app启动文件 这个阶段框架做了大量的准备工作，包括： 2.1、实例化容器类 2.1.1 设置基础目录路径 2.1.2 注册基础绑定 2.1.3 注册服务提供者 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第二章：核心代码结构分析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-09T01:20:36.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/php/iqcd90yh/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"第二章：核心代码结构分析"}],["meta",{"property":"og:description","content":"入口文件index.php的源码： public/index.php 按照上面代码中的注释，我们简要说明一下6个阶段，每个阶段大致都做了什么： 1、实现项目第三方库文件的自动加载 2、引入框架app启动文件 这个阶段框架做了大量的准备工作，包括： 2.1、实例化容器类 2.1.1 设置基础目录路径 2.1.2 注册基础绑定 2.1.3 注册服务提供者 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-09T01:20:36.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-09T01:20:36.000Z"}]]},"readingTime":{"minutes":1.9,"words":570},"git":{"createdTime":1751942180000,"updatedTime":1752024036000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":3,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"0b7d61f08c563d6514d6336c56fa0848a69e46eb","time":1752024036000,"email":"ingwei@163.com","author":"sreio","message":"README"},{"hash":"a16a3f8c5e99bfa6f2a99f497d8114454ed414e3","time":1751962383000,"email":"ingwei@163.com","author":"sreio","message":"rename"},{"hash":"7d36c2822e978ef31a2cebd3a69e67c3b9a172e9","time":1751942180000,"email":"ingwei@163.com","author":"sreio","message":"php"}]},"autoDesc":true,"filePathRelative":"php/4.穿透Laravel/2.第二章：核心代码结构分析/README.md","headers":[]}');export{k as comp,r as data};
