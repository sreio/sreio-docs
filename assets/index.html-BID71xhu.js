import{_ as t,c as a,e as i,o}from"./app-DDsjqNbb.js";const r="/assets/2-1-zUO3InT3.png",n={};function c(s,e){return o(),a("div",null,e[0]||(e[0]=[i('<p>最简单的队列模式，只有<code>一个消息生产者</code>，<code>一个消息消费者</code>，<code>一个队列</code>，也称为点对点模式、一对一模式。</p><h3 id="架构图" tabindex="-1"><a class="header-anchor" href="#架构图"><span>架构图</span></a></h3><figure><img src="'+r+'" alt="img" tabindex="0" loading="lazy" width="288" height="100"><figcaption>img</figcaption></figure><p>说明： P 代表生产者 , C 代表消费者，红色代表队列。</p><h3 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景"><span>应用场景</span></a></h3><p>适合比较简单的一对一消息通信，且不需要并发消费的场景，例如: 单一的异步发短信、发邮件、异步推送。</p><div class="hint-container tip"><p class="hint-container-title">提示：一对一的简单队列模式，消息的顺序是先进先出严格一致的，因为只有一个队列和一个消费者，消息只能一个个消费，消息顺序自然是严格一致的。</p></div>',7)]))}const d=t(n,[["render",c]]),m=JSON.parse('{"path":"/queue/RabbitMQ/%E7%AE%80%E5%8D%95%E9%98%9F%E5%88%97/","title":"工作模式-简单队列","lang":"zh-CN","frontmatter":{"title":"工作模式-简单队列","createTime":"2025/07/07 16:56:31","permalink":"/queue/RabbitMQ/简单队列/","description":"最简单的队列模式，只有一个消息生产者，一个消息消费者，一个队列，也称为点对点模式、一对一模式。 架构图 imgimg 说明： P 代表生产者 , C 代表消费者，红色代表队列。 应用场景 适合比较简单的一对一消息通信，且不需要并发消费的场景，例如: 单一的异步发短信、发邮件、异步推送。 提示：一对一的简单队列模式，消息的顺序是先进先出严格一致的，因为只...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"工作模式-简单队列\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-07-07T09:12:44.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.sreio.com/queue/RabbitMQ/%E7%AE%80%E5%8D%95%E9%98%9F%E5%88%97/"}],["meta",{"property":"og:site_name","content":"Sreio Docs"}],["meta",{"property":"og:title","content":"工作模式-简单队列"}],["meta",{"property":"og:description","content":"最简单的队列模式，只有一个消息生产者，一个消息消费者，一个队列，也称为点对点模式、一对一模式。 架构图 imgimg 说明： P 代表生产者 , C 代表消费者，红色代表队列。 应用场景 适合比较简单的一对一消息通信，且不需要并发消费的场景，例如: 单一的异步发短信、发邮件、异步推送。 提示：一对一的简单队列模式，消息的顺序是先进先出严格一致的，因为只..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-07T09:12:44.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-07T09:12:44.000Z"}]]},"readingTime":{"minutes":0.66,"words":197},"git":{"createdTime":1751879564000,"updatedTime":1751879564000,"contributors":[{"name":"sreio","username":"sreio","email":"ingwei@163.com","commits":1,"avatar":"https://avatars.githubusercontent.com/sreio?v=4","url":"https://github.com/sreio"}],"changelog":[{"hash":"ec6b65d5f5e156de0bddee87610673d45a5591df","time":1751879564000,"email":"ingwei@163.com","author":"sreio","message":"queue"}]},"autoDesc":true,"filePathRelative":"queue/2.RabbitMQ教程/3.工作原理/2.工作模式-简单队列.md","headers":[]}');export{d as comp,m as data};
